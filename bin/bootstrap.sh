#!/bin/bash

CODE_BASE=${BASH_SOURCE%/*}/..
CONFIG_DIR=$CODE_BASE/config/env
PWGEN=${BASH_SOURCE%/*}/pwgen.sh

ENVIRONMENT=${1:-dev}

# Simple status printer
function info {
    echo "| # | $@"
}

if [ "$ENVIRONMENT" == "staging" ]
then
  COMPOSE_SOURCE="$CODE_BASE/config/compose/staging.yaml"
elif [ "$ENVIRONMENT" == "prod" ]
then
  COMPOSE_SOURCE="$CODE_BASE/config/compose/prod.yaml"
else
  COMPOSE_SOURCE="$CODE_BASE/config/compose/dev.yaml"
fi

if [ ! -h "docker-compose.yaml" ]
then
  info "Created compose file from $COMPOSE_SOURCE"
  ln -sf "$COMPOSE_SOURCE" "$CODE_BASE/docker-compose.yaml"
fi

# Generate secrets if not generated from before
if [ -s "$CONFIG_DIR/generated.env" ]
then
    info "$CONFIG_DIR/generated.env is not empty; not generating secrets"
else
    info "Generating secrets to $CONFIG_DIR/generated.env..."
    cat << EOF > "$CONFIG_DIR"/generated.env
# This file was auto-generated by bin/bootstrap.sh at $(date -Iseconds)
SECRET_KEY=$($PWGEN)
POSTGRES_PASSWORD=$($PWGEN)
EOF
fi

info "Building Docker image..."
docker-compose build server

info "Starting services..."
docker-compose up -d

info "Waiting for 30s for the DB to get up and running..."
sleep 15

info "Migrating database..."
docker-compose run --rm server migrate

info "Success! Your p0sx has been served."
info "If something acts up, try running 'docker-compose up -d' to make sure all services are running, or check the logs with 'docker-compose logs -f --tail=20'"